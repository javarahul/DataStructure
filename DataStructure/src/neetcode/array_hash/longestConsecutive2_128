package neetcode.array_hash;

import java.util.HashMap;

public class longestConsecutive2_128 {

	public static void main(String[] args) {
		int nums[] = { 0, 3, 7, 2, 5, 8, 4, 6, 0, 1 };// { 12, 34, 7, 4, 2, 6, 8, 1, 9 };// { 100, 4, 200, 1, 3, 2 };
		System.out.println(longestConsecutive(nums));
	}

	private static int longestConsecutive(int[] nums) {
		HashMap<Integer, Boolean> map = new HashMap<>();
		for (int num : nums) {
			map.put(num, true);
		}

		for (int num : nums) {
			if (map.containsKey(num - 1)) {
				map.put(num, false);
			}
		}

		int longest_sequence = 0;

		for (int i = 0; i < nums.length; i++) {
			if (map.get(nums[i])) {
				int length = 1;
				int startingNum = nums[i];
				while (map.containsKey(startingNum + length)) {
					length++;
				}
				if (longest_sequence < length) {
					longest_sequence = length;
				}
			}
		}
		return longest_sequence;
	}
}
